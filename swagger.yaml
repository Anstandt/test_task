openapi: 3.0.3
info:
  title: Swagger Transfer - OpenAPI 3.0
  description: |-
    В документе описаны методы, используемые в процессе перевода денег со счета пользователя на другой счет и перечисленные в sequence диаграмме
  termsOfService: http://swagger.io/terms/
  contact:
    email: mail@vrusinova.ru
  license:
    name: Apache 2.0 
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /transfers:
    post:
      tags:
        - Transfer
      summary: Create a new request for a transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          description: Transfer request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'          
        '400':
          description: Bad request
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
        '500':
          description: Server Error
        '504':
          description: Gateway Timeout
  /transfers/confirm:
    post:
      tags:
        - Transfer
      summary: Confirm the transfer with OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferConfirmation'
      responses:
        '200':
          description: Transfer is confirmed      
        '400':
          description: Bad request
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
  /commissions/count:
    post:
      tags:
        - Commission
      description: Calculates the commission of the transfer
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CommissionRequest'
      responses:
        '200':
          description: Transfer request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionResponse'
  /accounts:
    get:
      tags:
      - Account
      summary: List of the user's accounts
      parameters:
        - name: userId
          in: query
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Accounts of this user not found
  /accounts/{accountId}/check/transfer:
    get: 
      tags:
       - Account
      summary: Check if the transfer from the account is possible
      parameters:
        - name: accountId
          in: path 
          description: ID of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'        
        '400':
          description: Invalid ID supplied
  /dictionaries/banks:
    get:
      tags:
      - Dictionaries
      summary: List of the banks
      parameters:
        - name: BIC
          in: query
          description: bank's BIC
          required: false
          schema:
            type: integer
            format: int64
        - name: INN
          in: query
          description: bank's INN
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBank'          
        '400':
          description: Invalid info supplied
        '404':
          description: Bank not found
components:
  schemas:
    Account:
      required:
       - id
        - number
        - currency
        - bankInfo
      type: object
      properties:
        id: 
          type: string
          format: uuid
        number:
          type: integer
          format: int64
        currency:
          type: string
        actualAmount:
          type: integer
          format: double  
    ExternalBank:
      required:
        - longName
        - BIC
        - INN
      type: object
      properties:
        longName: 
          type: string
        shortName:
          type: string
        BIC:
          type: integer
          format: int32
        INN: 
          type: integer
          format: int32
    Transfer:
      required:
        - senderId
        - senderAccountId
        - recipientPerson
        - recipientAccountNumber
        - amount
        - commissionAmount
        - paymentPurpose
      type: object
      properties:
        senderId:
          type: string
          format: uuid
        senderAccountId:
          type: string
          format: uuid
        recipientPerson:
          $ref: '#/components/schemas/Person'
        recipientAccountNumber:
          type: integer
          format: int64
        recipientBank:
          $ref: '#/components/schemas/ExternalBank'
        amount:
          type: integer
          format: double
        commissionAmount:
          type: integer
          format: double
        paymentPurpose:
          type: string
    TransferConfirmation:
      type: object
      properties:
        transferId:
          type: string
          format: uuid
        code:
          type: integer
          format: int32
    Person:
      required:
        - firstName
        - lastName
        - dateOfBirth
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        patronymic:
          type: string
    User:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        personInfo:
          $ref: '#/components/schemas/Person'
    TransferResponse:
      type: object
      properties:
        transferId:
          type: string
          format: uuid
    CommissionRequest:
      type: object
      properties:
        transferType:
          type: string
        BIC:
          type: integer
          format: int32
        amount:
          type: integer
          format: double
    CommissionResponse:
      type: object
      properties:
        commissionAmount:
          type: integer
          format: double   
    ApiResponse:
      type: object
      properties:
        message:
          type: integer
          format: int32

